/*
The rgb function is incomplete. Complete it so that passing in RGB decimal values will result in a hexadecimal representation being returned. Valid decimal values for RGB are 0 - 255. Any values that fall out of that range must be rounded to the closest valid value.

Note: Your answer should always be 6 characters long, the shorthand with 3 will not work here.

The following are examples of expected output values:

rgb(255, 255, 255) # returns FFFFFF
rgb(255, 255, 300) # returns FFFFFF
rgb(0,0,0) # returns 000000
rgb(148, 0, 211) # returns 9400D3

*/

class RGBToHex
{
  private: static std::string to255h(int color)
    {std::string res="";
     switch(color%16){
     case 0:{res="0"+res;break;}     case 1:{res="1"+res;break;}     case 2:{res="2"+res;break;}     case 3:{res="3"+res;break;}
     case 4:{res="4"+res;break;}     case 5:{res="5"+res;break;}     case 6:{res="6"+res;break;}     case 7:{res="7"+res;break;}
     case 8:{res="8"+res;break;}     case 9:{res="9"+res;break;}     case 10:{res="A"+res;break;}    case 11:{res="B"+res;break;}
     case 12:{res="C"+res;break;}    case 13:{res="D"+res;break;}    case 14:{res="E"+res;break;}    case 15:{res="F"+res;break;}
  }
    color-=color%16;
     color/=16;
     switch(color%16){
     case 0:{res="0"+res;break;}     case 1:{res="1"+res;break;}     case 2:{res="2"+res;break;}     case 3:{res="3"+res;break;}
     case 4:{res="4"+res;break;}     case 5:{res="5"+res;break;}     case 6:{res="6"+res;break;}     case 7:{res="7"+res;break;}
     case 8:{res="8"+res;break;}     case 9:{res="9"+res;break;}     case 10:{res="A"+res;break;}    case 11:{res="B"+res;break;}
     case 12:{res="C"+res;break;}    case 13:{res="D"+res;break;}    case 14:{res="E"+res;break;}    case 15:{res="F"+res;break;}
  }
     return res;
    }
  public:
  
  static std::string rgb(int r, int g, int b){
    std::string res="";
    if(r<=0)res+="00";
    else if(r>=255)res+="FF";
    else res+=to255h(r);
    if(g<=0)res+="00";
    else if(g>=255)res+="FF";
    else res+=to255h(g);
    if(b<=0)res+="00";
    else if(b>=255)res+="FF";
    else res+=to255h(b);
    return res;
  }
};
